{
  "permissions": {
    "allow": [
      "Edit",
      "Read",
      "Write",
      "Create",
      "Delete",
      "Replace",
      "Bash(ls:*)",
      "Bash(ll:*)",
      "Bash(la:*)",
      "Bash(cd:*)",
      "Bash(pwd)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(less:*)",
      "Bash(more:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(type:*)",
      "Bash(mkdir:*)",
      "Bash(rmdir:*)",
      "Bash(touch:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(ln:*)",
      "Bash(tree:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(wc:*)",
      "Bash(tr:*)",
      "Bash(cut:*)",
      "Bash(paste:*)",
      "Bash(diff:*)",
      "Bash(tar:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(bun:*)",
      "Bash(tsx:*)",
      "Bash(ts-node:*)",
      "Bash(nodemon:*)",
      "Bash(pm2:*)",
      "Bash(npm install:*)",
      "Bash(npm run:*)",
      "Bash(npm test:*)",
      "Bash(npm start:*)",
      "Bash(npm build:*)",
      "Bash(npm publish:*)",
      "Bash(npm link:*)",
      "Bash(npm uninstall:*)",
      "Bash(git:*)",
      "Bash(gh:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pip:*)",
      "Bash(pip3:*)",
      "Bash(pipenv:*)",
      "Bash(poetry:*)",
      "Bash(pytest:*)",
      "Bash(virtualenv:*)",
      "Bash(venv:*)",
      "Bash(make:*)",
      "Bash(cmake:*)",
      "Bash(gradle:*)",
      "Bash(mvn:*)",
      "Bash(cargo:*)",
      "Bash(go:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(tslint:*)",
      "Bash(black:*)",
      "Bash(flake8:*)",
      "Bash(rubocop:*)",
      "Bash(rustfmt:*)",
      "Bash(jest:*)",
      "Bash(mocha:*)",
      "Bash(vitest:*)",
      "Bash(cypress:*)",
      "Bash(playwright:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(podman:*)",
      "Bash(kubectl:*)",
      "Bash(mysql:*)",
      "Bash(psql:*)",
      "Bash(mongosh:*)",
      "Bash(redis-cli:*)",
      "Bash(sqlite3:*)",
      "Bash(ping:*)",
      "Bash(nc:*)",
      "Bash(netstat:*)",
      "Bash(lsof:*)",
      "Bash(ss:*)",
      "Bash(ps:*)",
      "Bash(top)",
      "Bash(htop)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(jobs)",
      "Bash(fg:*)",
      "Bash(bg:*)",
      "Bash(export:*)",
      "Bash(source:*)",
      "Bash(env)",
      "Bash(printenv:*)",
      "mcp__*",
      "Bash(rm:*)",
      "Bash(test:*)",
      "Bash(pkill:*)",
      "Bash(for i in {1..6})",
      "Bash(do python3 scripts/image_generator.py --outline \"/mnt/c/home/hiroshi/blog_generator/outputs/【年齢別】生成AI教育完全ガイド｜3歳〜18歳の発達段階別活用法-INT-02/20250619_145151_outline_INT-02.md\" --mode thumbnail --chapter $i)",
      "Bash(done)",
      "Bash(tmux capture-pane:*)",
      "Bash(./agent-send.sh:*)",
      "Bash(rg:*)",
      "Bash(tmux list-sessions:*)",
      "Bash(./Claude-Code-Communication/agent-send.sh:*)",
      "Bash(tmux new-session:*)",
      "Bash(tmux send-keys:*)",
      "Bash(timeout 300 python3 scripts/post_optimized_blog.py 2>&1)",
      "Bash(../agent-send.sh:*)",
      "Bash(while [ ! -f tmp/test_worker2_analysis.md ])",
      "Bash(do echo \"$(date): Worker2完了待機中...\")",
      "Bash(tmux list-windows:*)",
      "Bash(/mnt/c/home/hiroshi/blog_generator/Claude-Code-Communication/agent-send.sh boss1 \"【Worker3最終報告】WordPress記事更新統合システム開発完了！全テスト100%成功達成！バリデーション問題修正により品質向上。Boss1基盤×Worker1分析を活用した革新的統合システム完成。CLI・バッチ・統合・分析機能すべて実装完了。統合フェーズ大成功！\")",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:genedu.jp)",
      "Bash(/mnt/c/home/hiroshi/blog_generator/Claude-Code-Communication/agent-send.sh:*)",
      "Bash(while [ ! -f \"/mnt/c/home/hiroshi/blog_generator/tmp/worker1_complete.md\" ])",
      "Bash(do sleep:*)",
      "Bash(/mnt/c/home/hiroshi/blog_generator/Claude-Code-Communication/agent-send.sh boss1 \"【Worker2→Boss1緊急完了報告】President0追加要求・ファクトチェック修正戦略設計プロジェクト完了 ✅全6コンポーネント戦略設計完了 ✅革新的品質保証システム設計完了 ✅実装ロードマップ策定完了 成果物:/mnt/c/home/hiroshi/blog_generator/tmp/factcheck_correction_strategy.md 革命的価値提案:不正確情報完全排除、2024年最新情報全面更新、100%信頼性確保、品質保証100%達成システム Worker2緊急プロジェクト完了-Boss1確認要請\")",
      "Bash(tmux kill-session:*)",
      "Bash(tmux split-window:*)",
      "Bash(tmux list-panes:*)",
      "Bash(/mnt/c/home/hiroshi/blog_generator/agent-send.sh:*)",
      "Bash(./Claude-Code-Blog-communication/agent-send.sh:*)",
      "Bash(/mnt/c/home/hiroshi/blog_generator/Claude-Code-Blog-communication/quality-check.sh all)",
      "Bash(dos2unix:*)",
      "Bash(./Claude-Code-Blog-communication/quality-check.sh:*)",
      "WebFetch(domain:cursor.com)",
      "WebFetch(domain:github.blog)",
      "WebFetch(domain:www.anthropic.com)",
      "Bash(Claude-Code-Blog-communication/agent-send.sh worker2 \"【Boss1→Worker2】Worker2完了報告確認要求 - Phase2.5リライト・ファクトチェック完了状況の詳細報告を求めます。Worker1同様の完了報告形式で、第3章・第4章のリライト状況、ファクトチェック実施状況、修正反映状況を即座に報告してください。\")",
      "Bash(Claude-Code-Blog-communication/agent-send.sh worker3 \"【Boss1→Worker3】Worker3完了報告確認要求 - Phase2.5リライト・ファクトチェック完了状況の詳細報告を求めます。Worker1同様の完了報告形式で、第5章・第6章のリライト状況、ファクトチェック実施状況、修正反映状況を即座に報告してください。\")",
      "Bash(/mnt/c/home/hiroshi/blog_generator/Claude-Code-Blog-communication/agent-send.sh:*)",
      "Bash(Claude-Code-Blog-communication/agent-send.sh president \"【Boss1→President0】緊急統合作業完了報告\n\n## 統合作業実行結果\n\n### ✅ 完了した作業項目\n1. **章別ファイル統合**: Worker1-3の全章を統合し完全記事作成完了\n2. **品質基準確認**: H5タグ使用ゼロ、51,590文字達成、6章完全構成\n3. **Gutenbergブロック形式投稿**: 新規投稿ID 3193で完全投稿完了\n4. **画像統合**: アイキャッチ+6章画像の完全設置\n5. **ファクトチェック反映**: Worker1,3の修正点を統合記事に反映\n\n### 📊 最終成果物\n- **新規投稿ID**: 3193\n- **編集URL**: https://www.ht-sw.tech/wp-admin/post.php?action=edit&post=3193\n- **文字数**: 51,590文字（目標20,000文字を大幅超過）\n- **章構成**: 6章完全作成\n- **装飾要素**: 💡⚠️🎯🔍📊📋完全適用\n- **品質基準**: H5タグ使用ゼロ確認済み\n\n### 🎯 記事方向性変更完了\n- 「企業向けAI技術」→「個人エンジニア向けAI開発ツール活用」への完全転換\n- Claude Code、Gemini CLI、Cursor、GitHub Copilot特化内容\n- 個人エンジニアの不安・課題解決に焦点\n- 実践的ワークフロー・学習戦略の提供\n\n### 📈 創出した価値\n- SEO最適化された高品質記事の完成\n- 個人エンジニア市場への戦略的アプローチ\n- ファクトチェック済みの信頼性高い情報提供\n- Gutenberg完全対応の技術的完成度\n\n### 🔄 Worker2について\nWorker3の完了報告は受領済み。Worker2からの完了報告は未着だが、既存のファクトチェックレポートとエンジニア向け章ファイルを統合に反映済み。\n\nPresident0への統合作業完了報告提出。品質基準100%達成で任務完了です。\")",
      "Bash(./connection-test.sh:*)",
      "Bash(./agent-receive.sh:*)",
      "Bash(bash:*)",
      "Bash(do python3 /mnt/c/home/hiroshi/blog_generator/scripts/image_generator.py --outline outline_content.md --mode thumbnail --chapter $i)",
      "Bash(./tmux-unified-controller.sh:*)",
      "Bash(./log-rotation.sh:*)",
      "Bash(./system-health-check.sh:*)",
      "Bash(timeout:*)",
      "Bash(Claude-Code-Blog-communication/agent-send.sh boss1 \"テスト接続確認 - agent-sendパス修正テスト\")",
      "Bash(Claude-Code-Blog-communication/agent-send.sh boss1 \"【President0指示】ジェミニ記事テーマからアウトライン直接作成システム検討\n\ngemini_article_ideas.mdの1番目テーマ「AI調教師」について、検索意図分析を経由せず直接アウトライン作成する新しいワークフローを検討してください。\n\n【対象テーマ】\n「AI調教師」の誕生：21世紀の新しいブルーカラーか、それとも一瞬の流行か？\n- プロンプトエンジニアリングの先を行く、特定業務に特化したAI「しつけ」専門家\n- 単なる技術職ではなく、AIとの対話能力や業界知識が求められる新職人技の可能性\n\n【検討事項】\n1. 既存テンプレート（outline.md）のジェミニテーマ対応修正\n2. 検索キーワードに依存しない独創的アウトライン作成手法\n3. 一般的解説記事と差別化する切り口・視点の戦略\n\nboss1として最適なアプローチを分析・提案してください。\")",
      "Bash(Claude-Code-Blog-communication/tmux-unified-controller.sh --workflow connection-recovery)",
      "Bash(./scripts/emergency_connection_recovery.sh:*)"
    ],
    "deny": [
      "Bash(rm -rf /*)",
      "Bash(rm -rf /)",
      "Bash(sudo rm -rf:*)",
      "Bash(sudo:*)",
      "Bash(su:*)",
      "Bash(chmod 777 /)",
      "Bash(mkfs:*)",
      "Bash(dd:*)",
      "Bash(format:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(nc -l:*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)",
      "Bash(halt:*)",
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Edit(templates/*)",
      "Write(templates/*)",
      "Delete(templates/*)",
      "Replace(templates/*)",
      "Edit(scripts/*.py)",
      "Write(scripts/*.py)",
      "Delete(scripts/*.py)",
      "Replace(scripts/*.py)",
      "Edit(utils/*.py)",
      "Write(utils/*.py)",
      "Delete(utils/*.py)",
      "Replace(utils/*.py)",
      "Edit(wordpress_client.py)",
      "Write(wordpress_client.py)",
      "Delete(wordpress_client.py)",
      "Replace(wordpress_client.py)",
      "Edit(generate_template.yaml)",
      "Write(generate_template.yaml)",
      "Delete(generate_template.yaml)",
      "Replace(generate_template.yaml)",
      "Edit(requirements.txt)",
      "Write(requirements.txt)",
      "Delete(requirements.txt)",
      "Replace(requirements.txt)"
    ]
  }
}